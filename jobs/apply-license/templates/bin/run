#!/bin/bash 

exec 2>&1

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

<%
node = link('elasticsearch')
protocol = node.p('elasticsearch.client.protocol', 'http')
url="#{protocol}://"
username = node.p('elasticsearch.client.username', nil)
password = node.p('elasticsearch.client.password', nil)
if username && password
  url += "#{username}:#{password}@"
end
host = node.instances.first.address
url += host
port = node.p('elasticsearch.client.port', nil)
if port
  url += ":#{port}"
end
%>

function check_licence_is_invalid {
   local result=$1
   if [[ "$result" ==  *"returned error: 500 Internal Server Error"* ]]; then
      return 0
    else 
      return 1
   fi
}

function check_license_is_expired {
  local result=$1
   if [[ "$result" == *"expired"* ]]; then
      return 0
   else 
      return 1
   fi
}

function request_elk {
    local action=$1
    local endpoint=$2
    local body=$3
    local url=<%= url %>

    operation_status=$(curl --fail -X "$action" -H 'Content-Type: application/json' -k "${url}${endpoint}" -d "$body")
    echo "$operation_status"
    if check_licence_is_invalid $operation_status || check_license_is_expired $operation_status ; then
        return 100
      else
        return 0
    fi
}

<% if spec.bootstrap %>
request_elk PUT /_xpack/license?acknowledge=true '<%= p("elasticsearch.license") %>'
<% end %>
